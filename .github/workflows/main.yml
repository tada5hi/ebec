# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: CI

on:
    push:
        branches: [develop, master, next, beta, alpha]
    pull_request:
        types: [ opened, synchronize ]

env:
    NODE_VERSION: 18
    NODE_REGISTRY: 'https://registry.npmjs.org'

jobs:
    install:
        name: Checkout and install
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout
                uses: actions/checkout@v4

            -   name: Install
                uses: ./.github/actions/install
                with:
                    node-version: ${{ env.NODE_VERSION }}
                    node-registry: ${{ env.NODE_REGISTRY }}

    build:
        name: Build Packages
        needs: [ install ]
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout
                uses: actions/checkout@v4
            -   name: Install
                uses: ./.github/actions/install
                with:
                    node-version: ${{ env.NODE_VERSION }}
                    node-registry: ${{ env.NODE_REGISTRY }}

            -   name: Build
                uses: ./.github/actions/build

    tests:
        name: Test Packages
        needs: [build]
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout
                uses: actions/checkout@v4

            -   name: Install
                uses: ./.github/actions/install
                with:
                    node-version: ${{ env.NODE_VERSION }}
                    node-registry: ${{ env.NODE_REGISTRY }}

            -   name: Build
                uses: ./.github/actions/build

            -   name: Run tests
                run: |
                    npm run test

    lint:
        name: lint Packages
        needs: [build]
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout
                uses: actions/checkout@v4

            -   name: Install
                uses: ./.github/actions/install
                with:
                    node-version: ${{ env.NODE_VERSION }}
                    node-registry: ${{ env.NODE_REGISTRY }}

            -   name: Build
                uses: ./.github/actions/build

            -   name: Lint
                run: |
                    npm run lint

    coverage:
        name: Coverage
        needs: [lint, tests]
        runs-on: ubuntu-latest
        if: ${{ github.ref_name == 'master' }}
        steps:
            -   name: Checkout
                uses: actions/checkout@v4

            -   name: Install
                uses: ./.github/actions/install
                with:
                    node-version: ${{ env.NODE_VERSION }}
                    node-registry: ${{ env.NODE_REGISTRY }}

            -   name: Build
                uses: ./.github/actions/build

            -   name: Generate coverage
                run: |
                    npm run test:coverage --workspace=packages/ebec

            -   name: Upload Code coverage report
                uses: codecov/codecov-action@v3.1.4
                with:
                    token: ${{ secrets.codecov }}
                    directory: ./packages/ebec/coverage/

    release:
        name: Release
        if: |
            !startsWith(github.event.head_commit.message , 'chore(release):') &&
            github.event_name == 'push' &&
            github.ref_name != 'develop'

        needs: [build, tests]
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout
                uses: actions/checkout@v4
                with:
                    fetch-depth: 0

            -   name: Install
                uses: ./.github/actions/install
                with:
                    node-version: ${{ env.NODE_VERSION }}
                    node-registry: ${{ env.NODE_REGISTRY }}

            -   name: Build
                uses: ./.github/actions/build

            -   name: Publish
                env:
                    GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                    NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
                run: |
                    git config user.name "${{ github.actor }}"
                    git config user.email "${{ github.actor}}@users.noreply.github.com"

                    if [ ${{ github.ref_name }} = master ]; then
                      npx lerna version --conventional-commits --conventional-graduate --yes
                    else
                      npx lerna version --conventional-commits --conventional-prerelease --preid ${{ github.ref_name }} --yes
                    fi

                    npx lerna publish from-git --yes
